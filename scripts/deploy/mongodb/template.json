{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "networkName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Network."
            }
        },
        "appPassword": {
            "type": "securestring",
            "minLength": 12,
            "maxLength": 32,
            "metadata": {
                "description": "Application password."
            }
        },
        "appDatabase": {
            "type": "string",
            "minLength": 1,
            "maxLength": 12,
            "metadata": {
                "description": "Application Database."
            },
            "defaultValue": "replicaset"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "baseUrl": {
            "type": "string",
            "metadata": {
                "description": "The base URL for dependent assets.",
                "artifactsBaseUrl": ""
            },
            "defaultValue": "https://gallery.azure.com/artifact/20151001/bitnami.production-mongodbdefault.1.0.39/Artifacts"
        },
        "firstBootScriptUri": {
            "type": "string",
            "metadata": {
                "description": "The base URL for the firstboot script."
            },
            "defaultValue": "[concat(parameters('baseUrl'),'/provisioner-first-boot.sh')]"
        },
        "bundleTgzCustomUri": {
            "type": "string",
            "metadata": {
                "description": "The bundle tgz custom URL."
            },
            "defaultValue": "default"
        },
        "stackId": {
            "type": "string",
            "minLength": 3,
            "maxLength": 23,
            "metadata": {
                "description": "Stack ID - it is the Application Stack identifier."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "metadata": {
                "description": "Authentication type."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "OS Admin password."
            }
        },
        "sshKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH rsa public key file as a string."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D1_v2",
            "metadata": {
                "description": "Size of the VM."
            }
        },
        "dataDiskSize": {
            "type": "int",
            "defaultValue": 50,
            "minValue": 10,
            "maxValue": 2000,
            "metadata": {
                "description": "Data Disk Size in GB."
            }
        },
        "customData": {
            "type": "string",
            "metadata": {
                "description": "customData"
            },
            "defaultValue": "# blank"
        },
        "BitnamiTags": {
            "type": "object",
            "defaultValue": {
                "provider": "0FE3856A-6009-4EB1-96C3-1774DA058F86"
            }
        },
        "slaveCount": {
            "type": "int",
            "defaultValue": 2,
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32
            ],
            "metadata": {
                "description": "Number of machines with slaves to run."
            }
        },
        "arbiterCount": {
            "type": "int",
            "defaultValue": 0,
            "allowedValues": [
                0,
                1
            ],
            "metadata": {
                "description": "Number of arbiters to run."
            }
        }
    },
    "variables": {
        "appId": "mongodb",
        "appVersion": "4.0.3-0",
        "resourceAPIVersion": "2018-04-01",
        "networkResourcesAPIVersion": "2018-07-01",
        "vmResourcesAPIVersion": "2018-06-01",
        "storageAPIVersion": "2017-06-01",
        "publicIPAddressName": "[concat(parameters('stackId'), 'ip')]",
        "appPassword": "[parameters('appPassword')]",
        "appDatabase": "[parameters('appDatabase')]",
        "uniqueDeploymentString": "[uniqueString(subscription().subscriptionId, ' ', resourceGroup().id, ' ', deployment().name, parameters('stackId'), variables('appId'), variables('appVersion'), variables('appPassword'))]",
        "cloudAccountId": "[uniqueString(subscription().subscriptionId)]",
        "stackUniqueId": "[concat(parameters('stackId'), uniquestring(resourceGroup().id))]",
        "dnsPrefix": "[concat(variables('stackUniqueId'), '-')]",
        "newStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'storage')]",
        "linuxConfigurationChosen": "[concat('linuxConfiguration', parameters('authenticationType'))]",
        "linuxConfigurationsshPublicKey": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "/home/bitnami/.ssh/authorized_keys",
                        "keyData": "[parameters('sshKey')]"
                    }
                ]
            }
        },
        "linuxConfigurationpassword": {
            "disablePasswordAuthentication": false
        },
        "adminPasswordChosen": "[concat('adminPassword', parameters('authenticationType'))]",
        "adminPasswordsshPublicKey": "",
        "adminPasswordpassword": "[parameters('adminPassword')]",
        "availabilitySetName": "[concat(parameters('stackId'), 'set')]",
        "vnet": {
            "name": "[parameters('networkName')]"
        },
        "subnet": {
            "name": "default-subnet",
            "ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('networkName'), 'default-subnet')]"
        },
        "peerAddressIndex": 0,
        "dataNodeCount": "[add(int(parameters('slaveCount')), 1)]",
        "machineCount": "[add(int(parameters('arbiterCount')), variables('dataNodeCount'))]",
        "machineTierMap": "[concat('master=1,slave=',int(parameters('slaveCount')),',arbiter,0,')]",
        "arbiterIndex": "[variables('dataNodeCount')]",
        "arbiterNICIndexes": [
            0,
            "[variables('arbiterIndex')]"
        ],
        "arbiterNICIndex": "[variables('arbiterNICIndexes')[int(parameters('arbiterCount'))]]"
    },
    "resources": [
        {
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountName')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "tags": {
                "provider": "[toUpper(parameters('BitnamiTags').provider)]"
            },
            "properties": null
        },
        {
            "apiVersion": "[variables('networkResourcesAPIVersion')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "default-subnet-sg",
            "tags": {
                "provider": "[toUpper(parameters('BitnamiTags').provider)]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "pub_allow_tcp_port_22",
                        "properties": {
                            "description": "Allow inbound tcp port 22 from Internet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": 22,
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 201,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('networkResourcesAPIVersion')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet').name]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', 'default-subnet-sg')]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('BitnamiTags').provider)]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "11.0.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default-subnet",
                        "properties": {
                            "addressPrefix": "11.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'default-subnet-sg')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('resourceAPIVersion')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "properties": null
        },
        {
            "apiVersion": "2017-05-10",
            "type": "Microsoft.Resources/deployments",
            "name": "pid-4dc1be84-5575-4c87-8f27-4a00f3612e55",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "apiVersion": "[variables('networkResourcesAPIVersion')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('stackId'), '0nic')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnet').name)]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('BitnamiTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet').ref]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('networkResourcesAPIVersion')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('stackId'), copyIndex(1), 'nic')]",
            "copy": {
                "name": "niccopy",
                "count": "[sub(variables('machineCount'), 1)]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnet').name)]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('BitnamiTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet').ref]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('networkResourcesAPIVersion')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "tags": {
                "provider": "[toUpper(parameters('BitnamiTags').provider)]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsPrefix'), 'vm0')]"
                }
            }
        },
        {
            "apiVersion": "[variables('vmResourcesAPIVersion')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('stackId'), copyIndex())]",
            "copy": {
                "name": "vmcopy",
                "count": "[variables('dataNodeCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('stackId'), copyIndex(), 'nic'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('BitnamiTags').provider)]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('stackId'), copyIndex())]",
                    "adminUsername": "bitnami",
                    "adminPassword": "[variables(variables('adminPasswordChosen'))]",
                    "customData": "[base64(parameters('customData'))]",
                    "linuxConfiguration": "[variables(variables('linuxConfigurationChosen'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "credativ",
                        "offer": "Debian",
                        "sku": "9",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(variables('newStorageAccountName'), variables('storageAPIVersion')).primaryEndpoints.blob, 'vhds/os-', concat(parameters('stackId'), copyIndex()), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "datadisk",
                            "diskSizeGB": "[parameters('dataDiskSize')]",
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat(reference(variables('newStorageAccountName'), variables('storageAPIVersion')).primaryEndpoints.blob, 'vhds/os-', concat(parameters('stackId'), copyIndex()), '-data.vhd')]"
                            },
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('stackId'), copyIndex(), 'nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('newStorageAccountName'), variables('storageAPIVersion')).primaryEndpoints.blob]"
                    }
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                }
            }
        },
        {
            "apiVersion": "[variables('vmResourcesAPIVersion')]",
            "condition": "[equals(int(parameters('arbiterCount')),1)]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('stackId'), variables('arbiterIndex'))]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('stackId'), variables('arbiterNICIndex'), 'nic'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('BitnamiTags').provider)]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('stackId'), variables('arbiterIndex'))]",
                    "adminUsername": "bitnami",
                    "adminPassword": "[variables(variables('adminPasswordChosen'))]",
                    "customData": "[base64(parameters('customData'))]",
                    "linuxConfiguration": "[variables(variables('linuxConfigurationChosen'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "credativ",
                        "offer": "Debian",
                        "sku": 9,
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(variables('newStorageAccountName'), variables('storageAPIVersion')).primaryEndpoints.blob, 'vhds/os-', parameters('stackId'), variables('arbiterIndex'), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('stackId'), variables('arbiterIndex'), 'nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('newStorageAccountName'), variables('storageAPIVersion')).primaryEndpoints.blob]"
                    }
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                }
            }
        },
        {
            "apiVersion": "[variables('vmResourcesAPIVersion')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(concat(parameters('stackId'), copyIndex()), '/setupMachine')]",
            "copy": {
                "name": "vmextcopy",
                "count": "[variables('machineCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('stackId'), copyIndex()))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('BitnamiTags').provider)]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[parameters('firstBootScriptUri')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('sh ./provisioner-first-boot.sh ', ' \"', parameters('baseUrl'), '\" ', ' \"', parameters('bundleTgzCustomUri'), '\" ', ' \"', variables('appId'), '-', variables('appVersion'), '\" ', '--cloud-name \"', 'azure', '\" ', '--app-password \"', variables('appPassword'), '\" ', '--peer-nodes-count \"', variables('machineCount'), '\" ', '--peer-nodes-index \"', copyIndex(), '\" ', '--peer-nodes-prefix \"', parameters('stackId'), '\" ', '--peer-password-input \"', variables('uniqueDeploymentString'), '\" ', '--shared-unique-id-input \"', variables('uniqueDeploymentString'), '\" ', '--cloud-account-id \"', variables('cloudAccountId'), '\" ', '--instance-tier-map \"', variables('machineTierMap'), copyIndex(), '\" ', '--app-database \"', variables('appDatabase'), '\" ', '--peer-address \"', reference(concat(parameters('stackId'), variables('peerAddressIndex'), 'nic')).ipConfigurations[0].properties.privateIPAddress, '\" ')]"
                }
            }
        }
    ],
    "outputs": {
        "fqdn": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), variables('networkResourcesAPIVersion')).dnsSettings.fqdn]",
            "type": "string"
        }
    }
}